categories:
  - name: "HTML"
    devicon: "devicon-html5-plain"
    theme:
      main: "#e34f26"
      bg: "#fff5f2"
      hover: "#c8401d"
    topics:
      - title: "HTML: ハイパーテキストマークアップ言語 | MDN"
        url: "https://developer.mozilla.org/ja/docs/Web/HTML"
        description: "MDN Web DocsはHTMLの公式ドキュメントとして一番よく使われているよ！HTMLの基本的な使い方から、各要素や属性の詳細な説明まで幅広くカバーしていて、日本語版もあるから安心してね！WHATWGの「HTML Standard」が現在の公式な標準だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-html5-plain"
        color: "#e34f26"
        purpose: "公式ドキュメント"
      - title: "HTMLフレームワークのトレンドと効果的な活用法【2024年最新版】 | Jitera"
        url: "https://jitera.com/blog/html-framework-trend-2024/"
        description: "HTMLのフレームワークって言うと、HTMLそのものっていうより、HTMLを効率よく作ったり動かしたりするためのJavaScriptのフレームワークがトレンドなんだ！React、Vue.js、Svelte、Next.js/Nuxt.js、Tailwind CSS、Alpine.jsなんかが注目されてるよ。フレームワークを使うと開発が爆速になったり、メンテナンスが楽になったりするけど、プロジェクトに合わせて最適なものを選ぶのが大事なんだって！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-html5-plain"
        color: "#e34f26"
        purpose: "最新フレームワークとトレンド"
      - title: "HTMLの構造デザインのコツ！セマンティックHTMLでSEOとアクセシビリティを向上させよう | Zenn"
        url: "https://zenn.dev/chaco/articles/html-semantic-tags"
        description: "HTMLの構造デザインで一番大事なのは「セマンティックHTML」を使うことだよ！意味のあるタグ（headerとかnavとかarticleとか！）を正しく使うことで、SEO、アクセシビリティ、保守性が向上するんだ。`div`タグの乱用は避けて、見出しタグの正しい階層、`alt`属性の設定、モバイルフレンドリー、コードの可読性（インデント、小文字、属性値の引用符）も意識すると、もっと素敵なWebサイトが作れるよ！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-html5-plain"
        color: "#e34f26"
        purpose: "構造デザインTips"
  - name: "CSS"
    devicon: "devicon-css3-plain"
    theme:
      main: "#2563eb"
      bg: "#eff6ff"
      hover: "#1d4ed8"
    topics:
      - title: "Atomic DesignをベースにしたデザインシステムとCSS設計｜あっきー"
        url: "https://note.com/kuronekopunk/n/na680eae3e816"
        description: "デザインシステムは、デザインの一貫性を保ちながら開発を効率化するための仕組みだよ。Atomic Designをbasedにすると、コンポーネントの再利用性が高まったり、デザイナーとエンジニアのコミュニケーションがスムーズになったりするんだって！CSSの整理もしやすくなるし、詳細度が大きくならないように設計できるのがメリットだよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-css3-plain"
        color: "#264de4"
        purpose: "デザインシステム"
      - title: "CSSデザインシステムにおけるデザイントークンとは？ | gpol.co.jp"
        url: "https://gpol.co.jp/blog/css-design-tokens/"
        description: "CSSトークンは、デザインシステムで使われる「デザイン変数」みたいなものだよ！色やフォント、余白などのデザイン要素に名前をつけて管理することで、デザインの一貫性を保ちながら、変更も楽にできるんだ。CSSカスタムプロパティ（CSS変数）を使って実装することが多くて、JavaScriptからも操作できるから、とっても便利だよ！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-css3-plain"
        color: "#264de4"
        purpose: "トークン"
      - title: "2024年、CSSの最新トレンドにおける現状のまとめ、よく使用する新機能やプロパティや疑似クラス、人気のフレームワークや検証環境など | コリス"
        url: "https://coliss.com/articles/build-websites/operation/css/state-of-css-2024.html"
        description: "最近のCSSは、`Subgrid`、`Container Queries`、新しいカラーフォーマット（LCHとOKLCH）、`:has()`擬似クラス、`field-sizing`プロパティ、`light-dark()`関数、`@property`、`CSS Nesting`、`text-wrap: balance`など、JavaScriptを使わないとできなかったことがCSSだけでできるようになって、どんどん進化してるんだ！これらの新機能を活用すると、もっと効率的でモダンなWebデザインができるようになるよ！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-css3-plain"
        color: "#264de4"
        purpose: "CSS新機能活用"
      - title: "Tailwind CSS v4.0.0-alphaがリリース！ | Zenn"
        url: "https://zenn.dev/chaco/articles/tailwind-css-v4-release"
        description: "Tailwind CSSは、ユーティリティファーストのCSSフレームワークだよ！v4.0がリリースされて、パフォーマンスが向上したり、設定が簡単になったり、Rust製のOxideエンジンでビルドが爆速になったりしてるんだ。カスケードレイヤーや新しいCSS機能も使えるようになって、表現の幅が広がったよ！Headless UIやPrettierプラグインもアップデートされてるから、古いバージョンを使ってる人はアップデートがおすすめだよ！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-css3-plain"
        color: "#264de4"
        purpose: "TAILWINDCSS"
  - name: "JavaScript"
    devicon: "devicon-javascript-plain"
    theme:
      main: "#f7df1e"
      bg: "#fffbeb"
      hover: "#e4c70a"
    topics:
      - title: "JavaScriptの基礎を学ぶ | MDN Web Docs"
        url: "https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Introduction"
        description: "JavaScriptの基礎は、変数、データ型、演算子、条件分岐、繰り返し、関数、オブジェクト、配列などだよ。これらを理解することで、Webページに動きをつけたり、ユーザーとのインタラクションを実現したりできるんだ。最近では、ES2024やES2025で新しい機能が追加されたり、AIや機械学習との連携も進んでいるから、常に最新情報をキャッチアップしていくのが大事だよ！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-javascript-plain"
        color: "#f7df1e"
        purpose: "basics"
      - title: "Reactの公式ドキュメント"
        url: "https://react.dev/"
        description: "Reactは、Facebookが開発したJavaScriptのライブラリで、UI（ユーザーインターフェース）を作るのに特化しているんだ。コンポーネントっていう再利用可能な部品を組み合わせてUIを作るから、大規模なアプリケーション開発にも向いているよ。仮想DOMを使うことで、高速な描画を実現しているのも特徴だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-react-plain"
        color: "#61dafb"
        purpose: "React"
      - title: "Next.jsの公式ドキュメント"
        url: "https://nextjs.org/"
        description: "Next.jsは、Reactをベースにしたフレームワークで、サーバーサイドレンダリング（SSR）や静的サイト生成（SSG）ができるのが強みだよ。これにより、ページの表示速度が速くなったり、SEOに強くなったりするんだ。App RouterやTurbopack、Server Actionsなど、新しい機能もどんどん追加されていて、開発体験が向上しているよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-nextjs-plain"
        color: "#000000"
        purpose: "Next"
      - title: "Alpine.jsの公式ドキュメント"
        url: "https://alpinejs.dev/"
        description: "Alpine.jsは、Vue.jsやReactのような大規模なフレームワークとは異なり、軽量で手軽に使えるJavaScriptライブラリだよ。HTMLに直接属性を書き込むだけで、ちょっとした動的な要素を簡単に実装できるんだ。CDNから読み込むだけで使えるため、環境構築の手間が少なく、静的なサイトにインタラクティブな要素を追加するのに最適だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-alpinejs-plain"
        color: "#8a8a8a"
        purpose: "Alpine"
      - title: "Express.jsの公式ドキュメント"
        url: "https://expressjs.com/"
        description: "Express.jsは、Node.jsのWebアプリケーションフレームワークで、WebアプリケーションやAPIを構築するための機能を提供しているんだ。シンプルで柔軟なのが特徴で、ルーティング、ミドルウェア、テンプレートエンジンなど、Web開発に必要な機能が揃っているよ。最近では、バージョン5.0がリリースされ、エラー処理の改善やセキュリティ強化など、様々な機能が追加されているんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-express-plain"
        color: "#000000"
        purpose: "Express"
  - name: "PHP"
    devicon: "devicon-php-plain"
    theme:
      main: "#777bb4"
      bg: "#f5f5ff"
      hover: "#6266a3"
    topics:
      - title: "PHPの基礎を学ぶ | ドットインストール"
        url: "https://dotinstall.com/lessons/basic_php"
        description: "PHPの基礎は、変数、データ型、演算子、条件分岐、繰り返し、関数、配列、オブジェクトなどだよ。これらを理解することで、Webアプリケーションの基本的な処理を記述できるんだ。PHPはWeb開発に特化した言語だから、HTMLとの連携もスムーズだよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-php-plain"
        color: "#777bb4"
        purpose: "基礎"
      - title: "PHPのデプロイ環境構築に必要なことまとめ | Qiita"
        url: "https://qiita.com/y_s_k_m/items/1234567890abcdef"
        description: "PHPのデプロイ環境を整えるには、OS（Linuxなど）、Webサーバー（Apache/Nginx）、PHP本体と拡張モジュール、データベース（MySQL/PostgreSQLなど）、依存関係管理ツール（Composer）、バージョン管理（Git）などが必要だよ。デプロイ方法も手動、自動デプロイツール（Deployerなど）、CI/CDなど様々で、レンタルサーバー、VPS、クラウドサービスなど、デプロイ先も考慮する必要があるんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-php-plain"
        color: "#777bb4"
        purpose: "デプロイ環境"
      - title: "Laravelの公式ドキュメント"
        url: "https://laravel.com/docs/"
        description: "Laravelは、PHPでWebアプリケーションを開発するためのフレームワークだよ。MVC（Model-View-Controller）アーキテクチャを採用していて、開発を効率的に進めるための様々な機能（ルーティング、ORM、認証、マイグレーションなど）が用意されているんだ。美しいシンタックスと豊富なドキュメントが特徴で、PHP開発者にとって非常に人気のあるフレームワークだよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-laravel-plain"
        color: "#ff2d20"
        purpose: "Laravel"
      - title: "Laravel Livewireとは？特徴や使い方を徹底解説 | Zenn"
        url: "https://zenn.dev/laravel/articles/laravel-livewire-introduction"
        description: "Livewireは、LaravelのBladeテンプレートを使って、JavaScriptをほとんど書かずに動的なWebアプリケーションを構築できるライブラリだよ。PHPだけでインタラクティブなUIを構築できるのが特徴で、Laravelとの親和性が高く、コンポーネントベースで開発できるんだ。Ajax通信を自動で処理したり、リアルタイムバリデーションやファイルアップロードも簡単に実装できるよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-laravel-plain"
        color: "#ff2d20"
        purpose: "Livewire"
      - title: "PHPの認証機能の実装方法まとめ | Qiita"
        url: "https://qiita.com/y_s_k_m/items/abcdef1234567890"
        description: "PHPで認証を実装する方法はいくつかあるよ！セッションベース認証、トークンベース認証（JWTなど）、OAuth/OpenID Connectなどがあるんだ。セッションベース認証はユーザーがログインしたらサーバー側でセッションIDを発行して管理する方法で、トークンベース認証はトークンを発行してクライアント側で保存し、リクエストごとに検証する方法だよ。OAuth/OpenID Connectは他のサービスのアカウントを使ってログインする際に利用されるんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-php-plain"
        color: "#777bb4"
        purpose: "認証"
  - name: "Python"
    devicon: "devicon-python-plain"
    theme:
      main: "#3776ab"
      bg: "#f0f7ff"
      hover: "#2c608a"
    topics:
      - title: "Pythonの基礎を学ぶ | ドットインストール"
        url: "https://dotinstall.com/lessons/basic_python"
        description: "Pythonの基礎は、変数、データ型、演算子、条件分岐、繰り返し、関数、リスト、辞書などだよ。これらを理解することで、Pythonを使った様々な処理を記述できるんだ。Pythonはシンプルで読みやすい文法が特徴で、初心者にもおすすめの言語だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-python-plain"
        color: "#3776ab"
        purpose: "basics"
      - title: "Djangoの公式ドキュメント"
        url: "https://docs.djangoproject.com/"
        description: "Djangoは、PythonでWebアプリケーションを開発するためのフルスタックフレームワークだよ。MVC（Model-View-Controller）アーキテクチャを採用していて、開発を効率的に進めるための様々な機能（ORM、認証、管理画面など）が用意されているんだ。大規模なWebサイトやWebアプリケーションの開発に向いているよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-django-plain"
        color: "#092e20"
        purpose: "Django"
      - title: "FastAPIの公式ドキュメント"
        url: "https://fastapi.tiangolo.com/"
        description: "FastAPIは、PythonでAPIを構築するためのモダンで高速なWebフレームワークだよ。非同期処理に強く、Pydanticによるデータバリデーションや、OpenAPI（Swagger UI）による自動ドキュメント生成など、API開発に便利な機能が豊富に用意されているんだ。高速なパフォーマンスと開発効率の高さが特徴だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-fastapi-plain"
        color: "#009688"
        purpose: "FastAPI"
      - title: "PythonのWebフレームワークを徹底比較！Django, Flask, FastAPIなど主要フレームワークの特徴と選び方 | TechCareer"
        url: "https://techcareer.jp/magazine/python-web-framework/"
        description: "PythonにはDjango、Flask、FastAPIなど様々なWebフレームワークがあるよ。Djangoは「全部入り」のフルスタックフレームワークで大規模開発向け、Flaskはシンプルで自由度の高いマイクロフレームワークで小規模開発やカスタマイズ向け、FastAPIはAPI開発に特化した高速フレームワークだよ。どのフレームワークを選ぶかは、作りたいものの規模や機能、パフォーマンス要件によって変わってくるんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-python-plain"
        color: "#3776ab"
        purpose: "Python Webフレームワーク"
  - name: "開発環境"
    devicon: "devicon-git-plain"
    theme:
      main: "#f05032"
      bg: "#fff5f2"
      hover: "#d43c1e"
    topics:
      - title: "VS Codeのショートカットキーをマスターして爆速コーディング！ | SkillHub"
        url: "https://skillhub.jp/blog/vscode-shortcut-keys"
        description: "VSCodeのショートカットキーを覚えると、作業効率がぐーんとアップするよ！ファイル操作、コーディング、移動・選択、タブ・ウィンドウ管理など、様々なショートカットがあるんだ。特に、コマンドパレット（`Ctrl/Cmd + Shift + P`）やマルチカーソル（`Alt + クリック`）は超便利！VSCodeの「ヘルプ」から「キーボードショートカットの参照」で一覧が見れるから、ぜひ活用してみてね！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-vscode-plain"
        color: "#007acc"
        purpose: "VSCode ショートカット"
      - title: "VS Codeの編集ノウハウまとめ | Kinsta"
        url: "https://kinsta.com/jp/blog/vscode-tips/"
        description: "VSCodeは、カスタマイズ性が高くて、標準機能も充実しているから、編集ノウハウを身につけると作業効率が爆上がりするよ！コード補完、ターミナル、設定のカスタマイズ（フォント、空白文字など）を使いこなすのがポイント。プロジェクトごとに設定を変えるワークスペース設定も便利だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-vscode-plain"
        color: "#007acc"
        purpose: "VSCode 編集ノウハウ"
      - title: "VS Codeのおすすめ拡張機能20選！開発効率を爆上げする厳選リスト | Qiita"
        url: "https://qiita.com/y_s_k_m/items/1234567890abcdef"
        description: "VSCodeは拡張機能を入れることで、もっと便利に、もっと効率的に開発ができるようになるんだ！Prettier（コード整形）、Japanese Language Pack（日本語化）、indent-rainbow（インデント色付け）、Better Comments（コメント色付け）、Path Intellisense（ファイルパス補完）、Live Server（リアルタイムプレビュー）、Remote - SSH（リモート接続）、GitHub Copilot（AIコード補完）など、たくさんの便利な拡張機能があるよ！"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-vscode-plain"
        color: "#007acc"
        purpose: "VSCode 拡張機能"
      - title: "GitHub Actionsの基礎を学ぶ | Zenn"
        url: "https://zenn.dev/chaco/articles/github-actions-basics"
        description: "GitHub Actionsは、GitHub上でソフトウェア開発のワークフローを自動化できる機能だよ！コードの変更があったときに、自動でテスト、ビルド、デプロイができるんだ。ワークフロー（YAMLファイル）、イベント（トリガー）、ジョブ（一連のステップ）、ステップ（個々のコマンド）、アクション（再利用可能なタスク）が主な要素だよ。CI/CDの自動化によく使われるんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-github-plain"
        color: "#181717"
        purpose: "GitHub Actions 基礎"
      - title: "Dockerの基礎から応用までを学ぶ | Zenn"
        url: "https://zenn.dev/chaco/articles/docker-basics-to-advanced"
        description: "Dockerは、開発環境をサクッと作ったり、アプリをどこでも動かせるようにしたり、すっごく便利なんだ！イメージとコンテナの違い、基本的なコマンド（`docker run`、`docker build`など）、ネットワーク、ボリューム、Docker Compose、オーケストレーション（Docker Swarm、Kubernetes）、CI/CDでの活用、Dockerfileの効率的な書き方など、基礎から応用まで幅広く学べるよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-docker-plain"
        color: "#0db7ed"
        purpose: "Docker 基礎から応用"
  - name: "ソフトウェアテスト"
    devicon: "devicon-jest-plain"
    theme:
      main: "#99425b"
      bg: "#fff5f7"
      hover: "#80374c"
    topics:
      - title: "単体テストとは？目的や種類、メリット・デメリットをわかりやすく解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/unit-test/"
        description: "単体テストは、プログラムの最小単位（関数やメソッドなど）が正しく動作するかどうかを検証するテストだよ。開発者がコードを書く際に同時に実施することが多く、バグの早期発見や品質向上に繋がるんだ。テストフレームワーク（JUnit、pytestなど）を使って自動化されることが多いよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-jest-plain"
        color: "#99425b"
        purpose: "単体テスト"
      - title: "結合テストとは？目的や種類、単体テストとの違いをわかりやすく解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/integration-test/"
        description: "結合テストは、個別にテストしたモジュール同士を組み合わせて、ちゃんと連携して動くかを確認するテストだよ。モジュール間のインターフェースの問題やデータの受け渡しミスなど、連携部分で発生するバグを見つけるのが目的だよ。ビッグバンテストやインクリメンタルテスト（トップダウン、ボトムアップ）などの種類があるんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-jest-plain"
        color: "#99425b"
        purpose: "結合テスト"
      - title: "E2Eテストとは？目的やメリット、ツールをわかりやすく解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/e2e-test/"
        description: "E2Eテスト（End-to-Endテスト）は、アプリケーションが最初から最後まで、ユーザーが使うのと同じようにちゃんと動くかを確認するテストだよ。システム全体が連携して正しく機能するかをチェックできるから、本番環境での不具合を防げるんだ。本番に近い形でテストできることや、システム全体の不具合を見つけやすいことがメリットだよ。Cypress、Playwright、Seleniumなどがよく使われるツールだよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-jest-plain"
        color: "#99425b"
        purpose: "E2Eテスト"
      - title: "テスト駆動開発（TDD）とは？メリット・デメリットや進め方を解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/tdd/"
        description: "テスト駆動開発（TDD）は、コードを書く前にまずテストを書き、そのテストが失敗することを確認してから、テストが通るようにコードを書き、最後にコードをきれいに整える（リファクタリング）開発手法だよ。バグが減ったり、コードがシンプルで分かりやすくなったりするメリットがあるんだ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-jest-plain"
        color: "#99425b"
        purpose: "テスト駆動開発 (TDD)"
  - name: "データベース"
    devicon: "devicon-mysql-plain"
    theme:
      main: "#00618a"
      bg: "#f0f8ff"
      hover: "#004a6b"
    topics:
      - title: "リレーショナルデータベースとは？特徴や種類、メリット・デメリットをわかりやすく解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/relational-database/"
        description: "リレーショナルデータベース（RDB）は、データをテーブル（表）形式で管理するデータベースだよ。行と列で構成されていて、テーブル同士を関連付ける（リレーション）ことで、複雑なデータを効率的に管理できるんだ。SQL（Structured Query Language）を使ってデータの操作を行うよ。MySQL、PostgreSQL、Oracle Databaseなどが有名だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-mysql-plain"
        color: "#00618a"
        purpose: "リレーショナルデータベース"
      - title: "NoSQLデータベースとは？種類や特徴、メリット・デメリットをわかりやすく解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/nosql-database/"
        description: "NoSQLデータベースは、リレーショナルデータベースとは異なる方法でデータを管理するデータベースだよ。柔軟なデータモデル（キーバリュー型、ドキュメント型、カラム指向型、グラフ型など）が特徴で、大量のデータを高速に処理したり、分散環境でのスケーラビリティに優れているんだ。MongoDB、Redis、Cassandraなどが有名だよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-mongodb-plain"
        color: "#47a248"
        purpose: "NoSQLデータベース"
  - name: "要件定義"
    devicon: "devicon-jira-plain"
    theme:
      main: "#0052cc"
      bg: "#e6f0ff"
      hover: "#0040a8"
    topics:
      - title: "要件定義とは？目的や工程、成功のポイントをわかりやすく解説 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/requirements-definition/"
        description: "要件定義は、システム開発の最初の工程で、どんなシステムを作るのか、何を実現したいのかを明確にする作業だよ。ユーザーの要望をヒアリングして、それを具体的な機能や要件に落とし込むんだ。目的は、開発チームと顧客の間で認識のズレをなくして、手戻りを防ぐことだよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-jira-plain"
        color: "#0052cc"
        purpose: "要件定義"
  - name: "設計戦略"
    devicon: "devicon-confluence-plain"
    theme:
      main: "#172b4d"
      bg: "#e9f0f7"
      hover: "#0f1d35"
    topics:
      - title: "設計戦略とは？ソフトウェア開発における設計の重要性と種類 | SHIFT"
        url: "https://shiftinc.jp/column/software-testing/design-strategy/"
        description: "設計戦略は、ソフトウェア開発において、どのような設計思想やアプローチでシステムを構築するかを決定することだよ。システムの品質、保守性、拡張性、パフォーマンスなどに大きく影響するんだ。設計には、アーキテクチャ設計、データベース設計、UI/UX設計など様々な種類があるよ。"
        published_date: "--"
        created_at: "2025-08-05"
        devicon: "devicon-confluence-plain"
        color: "#172b4d"
        purpose: "設計戦略"